<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.learn.memberboard.impl.MemberBoardDAO">

	<insert id="insertBoard" parameterType="memberBoard">
		INSERT INTO CALL_CENTER
		 (QNA_NO,USER_ID,GRADE,QNA_TITLE,QNA_CONTENT,QNA_FILE)
		VALUES ((SELECT NVL(MAX(QNA_NO),0) + 1 FROM CALL_CENTER), #{userId},
		 #{grade}, #{qnaTitle}, #{qnaContent}, #{qnaFile})
	</insert>
		
	<update id="updateBoard" parameterType="memberBoard">
		UPDATE CALL_CENTER
		 SET QNA_TITLE = #{qnaTitle}, QNA_CONTENT = #{qnaContent}
		 , QNA_FILE = #{qnaFile},
		  QNA_ADOPT = #{qnaAdopt}
		 WHERE QNA_NO = #{qnaNo}
	</update>
	
	<delete id="deleteBoard" parameterType="board">
		DELETE FROM CALL_CENTER
		WHERE QNA_NO = #{qnaNo}	
	</delete>
	
	<select id="getBoard" parameterType="memberBoard" resultType="memberBoard">
			SELECT * FROM CALL_CENTER WHERE QNA_NO = #{qnaNo}		
	</select>
	
	<select id="getBoardListMap" parameterType="map" resultType="memberBoard">
		SELECT * FROM 
			(SELECT ROWNUM R_NUM, B.* from 
				(SELECT * FROM CALL_CENTER
					WHERE 1 = 1
					AND USER_ID = #{userId}
					<if test="qnaAdopt != null">
					AND QNA_ADOPT = #{qnaAdopt}
					</if>		
					<if test="searchKeyword != null">
					AND ( QNA_TITLE LIKE '%'|| #{searchKeyword} ||'%'
					OR QNA_CONTENT LIKE '%'|| #{searchKeyword} ||'%')		
					</if>		
					ORDER BY QNA_REGDATE DESC) B)
		WHERE R_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	
	<select id="countBoard" parameterType="memberBoard" resultType="int">
		SELECT COUNT(QNA_NO) FROM CALL_CENTER
		WHERE 1 = 1
		AND USER_ID = #{userId}
		<if test="searchKeyword != null">
		AND ( QNA_TITLE LIKE '%'|| #{searchKeyword} ||'%'
		OR QNA_CONTENT LIKE '%'|| #{searchKeyword} ||'%')		
		</if>			
		<if test="qnaAdopt != null">
		AND QNA_ADOPT = #{qnaAdopt}
		</if>	
	</select>
	
	<select id="getBoardList" parameterType="memberBoard" resultType="memberBoard">
		SELECT * FROM CALL_CENTER
		WHERE 1 = 1
		AND USER_ID = #{userId}
		<if test="searchKeyword != null">
		OR QNA_TITLE LIKE '%'|| #{searchKeyword} ||'%'
		OR QNA_CONTENT LIKE '%'|| #{searchKeyword} ||'%'		
		</if>	
		ORDER BY QNA_REGDATE DESC	
	</select>
	
	
	
	<!-- 코멘트 관련 매퍼 -->
	
	<insert id="addCallcenterComment" parameterType="CallcenterComment">
		INSERT INTO CALLCENTER_COMMENT
		 (COMMENT_NO, QNA_NO, USER_ID, GRADE, COMMENT_CONTENT, COMMENT_FILE)
		VALUES ((SELECT NVL(MAX(COMMENT_NO),0) + 1 FROM CALLCENTER_COMMENT), #{qnaNo},
		 #{userId}, #{grade}, #{commentContent}, #{commentFile})
	</insert>
	
	<select id="getCallcenterComment" parameterType="memberBoard" resultType="CallcenterComment">
		SELECT * FROM CALLCENTER_COMMENT
		WHERE QNA_NO = #{qnaNo}
	</select>
	
	<delete id="delCallcenterComment" parameterType="CallcenterComment">
		DELETE FROM CALLCENTER_COMMENT
		WHERE COMMENT_NO = #{commentNo}
	</delete>
		
	
	<select id="resolvedCBoardList" parameterType="memberBoard" resultType="memberBoard">
		SELECT * FROM CALL_CENTER
		WHERE USER_ID = #{userId} AND QNA_ADOPT = 'TRUE'
		ORDER BY QNA_REGDATE DESC
	</select>
	
	<select id="unResolvedCBoardList" parameterType="memberBoard" resultType="memberBoard">
		SELECT * FROM CALL_CENTER
		WHERE USER_ID = #{userId} AND QNA_ADOPT = 'FALSE'
		ORDER BY QNA_REGDATE DESC
	</select>
	
	<select id="goMyLectureList" parameterType="OrdersDetail" resultType="OrdersDetail">
		SELECT J.LECTURE_NO LECTURE_NO, J.USER_ID USER_ID, ORDER_NO, ORDER_REGDATE,
		LECTURE_COVERIMG, LECTURE_TITLE, LECTURE_SUMMARY, LECTURE_DUE, LECTURE_RATE
		FROM (
		 SELECT LECTURE_NO, D.USER_ID USER_ID, D.ORDER_NO ORDER_NO, ORDER_REGDATE, LECTURE_RATE
		 FROM ORDER_DETAIL D
		 LEFT JOIN ORDERS O
<!-- 		 WHERE D.USER_ID = 'gee1suu@gmail.com' -->
		 ON (D.ORDER_NO = O.ORDER_NO)
		 WHERE D.USER_ID = #{userId}
<!-- 		<if test="lectureRate == 'ALL'"> -->
<!-- 			AND D.LECTURE_RATE = 100 -->
<!-- 		</if> -->
		
<!-- 		<if test="lectureRate == 'HALF'"> -->
<!-- 			AND D.LECTURE_RATE < 100 -->
<!-- 		</if> -->
		) J LEFT JOIN LECTURE L
		ON (J.LECTURE_NO = L.LECTURE_NO)
		
		<!-- 최근공부 내림차순 정렬 -->
<!-- 		<if test=""> -->
<!-- 		ORDER BY -->
<!-- 		</if> -->
		<!-- 최근 수강 신청 내림차순 정렬 -->
<!-- 		<if test=""> -->
<!-- 		ORDER BY -->
<!-- 		</if> -->
		<!-- 제목순 오름차순 정렬 -->
<!-- 		<if test=""> -->
<!-- 		ORDER BY -->
<!-- 		</if> -->
		
		
	</select>
	
	
	
	
	
	
	
	
</mapper>






